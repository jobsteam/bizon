# Generated by Django 2.0.4 on 2018-05-02 20:07

import ckeditor_uploader.fields
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import mptt.fields
import sorl.thumbnail.fields
import taggit.managers


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('taggit', '0002_auto_20150616_2121'),
        ('contenttypes', '0002_remove_content_type_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='Article',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(db_index=True, max_length=254, verbose_name='название')),
                ('slug', models.SlugField(blank=True, verbose_name='slug')),
                ('cover', sorl.thumbnail.fields.ImageField(blank=True, null=True, upload_to='cover', verbose_name='обложка')),
                ('background', sorl.thumbnail.fields.ImageField(blank=True, null=True, upload_to='background', verbose_name='задник')),
                ('intro', models.TextField(blank=True, verbose_name='анонс')),
                ('text', ckeditor_uploader.fields.RichTextUploadingField(blank=True, verbose_name='текст')),
                ('created', models.DateTimeField(default=django.utils.timezone.now, verbose_name='дата создания')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='дата изменения')),
                ('views', models.PositiveIntegerField(default=0, verbose_name='кол-во просмотров')),
                ('is_published', models.BooleanField(default=True, verbose_name='опубликовано')),
                ('is_marquee', models.BooleanField(default=False, verbose_name='бегущая строка')),
                ('template_name', models.CharField(choices=[('articles/articles_template/default.html', 'default'), ('articles/articles_template/branding.html', 'branding')], default='articles/articles_template/default.html', max_length=254, verbose_name='шаблон')),
            ],
            options={
                'verbose_name_plural': 'статьи',
                'ordering': ['-created'],
                'verbose_name': 'статья',
            },
        ),
        migrations.CreateModel(
            name='Author',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_name', models.CharField(max_length=254, verbose_name='фамилия')),
                ('name', models.CharField(max_length=254, verbose_name='имя')),
                ('patronymic', models.CharField(max_length=254, verbose_name='отчество')),
            ],
            options={
                'verbose_name_plural': 'авторы',
                'ordering': ['last_name', 'name'],
                'verbose_name': 'автор',
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(db_index=True, max_length=254, verbose_name='название')),
                ('slug', models.SlugField(verbose_name='slug')),
                ('article_type', models.CharField(choices=[('news', 'Новость'), ('reading', 'Чтиво'), ('future', 'Будущее'), ('globe', 'Глобус'), ('fun', 'Каламбур'), ('media', 'Медиа')], db_index=True, default='News', max_length=254, verbose_name='тип статьи')),
                ('lft', models.PositiveIntegerField(db_index=True, editable=False)),
                ('rght', models.PositiveIntegerField(db_index=True, editable=False)),
                ('tree_id', models.PositiveIntegerField(db_index=True, editable=False)),
                ('level', models.PositiveIntegerField(db_index=True, editable=False)),
                ('parent', mptt.fields.TreeForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='articles.Category', verbose_name='родительская категория')),
            ],
            options={
                'verbose_name_plural': 'категории',
                'verbose_name': 'категория',
            },
        ),
        migrations.CreateModel(
            name='Fun',
            fields=[
                ('article_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='articles.Article')),
            ],
            options={
                'verbose_name_plural': 'каламбуры',
                'verbose_name': 'каламбур',
            },
            bases=('articles.article',),
        ),
        migrations.CreateModel(
            name='Future',
            fields=[
                ('article_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='articles.Article')),
            ],
            options={
                'verbose_name_plural': 'будущее',
                'verbose_name': 'будущее',
            },
            bases=('articles.article',),
        ),
        migrations.CreateModel(
            name='Globe',
            fields=[
                ('article_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='articles.Article')),
            ],
            options={
                'verbose_name_plural': 'глобусы',
                'verbose_name': 'глобус',
            },
            bases=('articles.article',),
        ),
        migrations.CreateModel(
            name='Media',
            fields=[
                ('article_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='articles.Article')),
            ],
            options={
                'verbose_name_plural': 'медиа',
                'verbose_name': 'медиа',
            },
            bases=('articles.article',),
        ),
        migrations.CreateModel(
            name='News',
            fields=[
                ('article_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='articles.Article')),
            ],
            options={
                'verbose_name_plural': 'новости',
                'verbose_name': 'новость',
            },
            bases=('articles.article',),
        ),
        migrations.CreateModel(
            name='Reading',
            fields=[
                ('article_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='articles.Article')),
            ],
            options={
                'verbose_name_plural': 'чтиво',
                'verbose_name': 'чтиво',
            },
            bases=('articles.article',),
        ),
        migrations.AddField(
            model_name='article',
            name='authors',
            field=models.ManyToManyField(blank=True, related_name='articles', to='articles.Author', verbose_name='авторы'),
        ),
        migrations.AddField(
            model_name='article',
            name='category',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='articles', to='articles.Category', verbose_name='категория'),
        ),
        migrations.AddField(
            model_name='article',
            name='polymorphic_ctype',
            field=models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='polymorphic_articles.article_set+', to='contenttypes.ContentType'),
        ),
        migrations.AddField(
            model_name='article',
            name='tags',
            field=taggit.managers.TaggableManager(help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags'),
        ),
    ]
